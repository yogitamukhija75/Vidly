{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","process","ReactDOM","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4edb2d1f.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\n","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authService\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function getGenres() {\n  return http.get(apiUrl + \"/genres\");\n}\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(\"SPIDERMAN\",process.env);\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}